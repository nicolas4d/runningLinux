* 
  Many people are fascinated by computer graphics. Computers are being used to
  create photorealistic images of surreal scenes or fractally generated images
  of mountain ridges with lakes and valleys; to change images by bending,
  polishing, and aging them; or to make any other manipulations.

  Linux does not need to step shyly aside when it comes to graphics. It can do
  just about anything that other computing environments can do, and in some
  areas, such as dealing with many graphics files at the same time, it even
  excels. The X Window System, described in the next chapter, forms a very good
  base for bitmapped graphics. There is now also hardware support for 3D
  graphics conforming to the OpenGL standard.
* 
  However, working with graphics on Linux is sometimes different from what you
  might be used to on other operating systems; the Unix model of small,
  interoperating tools is still alive and well here, too. This philosophy is
  illustrated most clearly with the ImageMagick suite of graphics manipulation
  programs, which we will describe here. ImageMagick is a collection of tools
  that operate on graphics files and are started from the command line or from
  shell scripts. Imagine that you have 2,000 files of one file format that you
  want to reduce to 256 colors, slant, and convert to another file format. On
  Linux, this requires only a few lines in a shell script. Now imagine doing
  this on Windows: click the File menu, click the Open menu entry, select a
  file, select an operation, specify the parameters for the operation in a
  dialog, click OK, choose Save from the menu, select a filename, and then click
  OK. Now repeat for next 1999 files. Can you say RSI?(Repetitive Strain Injury
  â€” a malady that comes from typing too much. The better known carpal tunnel
  syndrome is one form of RSI.)
* 
  Graphics can not only be drawn, but also programmed. Certain tools, such as
  the ray-tracer POVRAY presented in this chapter, enable you to specify the
  graphics to be generated by a suite of commands, often in a full-blown
  graphics programming language. While this is perhaps more difficult than
  drawing the desired graphics with a mouse, it is also infinitely more flexible
  once you have mastered how to use it.

  Now, not everybody wants to work with graphics from the command line. Part of
  the appeal of working with computer graphics is the immediate feedback you get
  when working with graphics programs, and Linux can provide this, too. The
  GIMP, which we will be covering shortly, is a fascinating package for
  interactive image manipulation that is superior to a lot of commercial
  graphics manipulation software on other systems.

  Many more graphics programs are available for Linux, including 3D modelers and
  video players. Scouring some Linux archives will reveal a wealth of good
  software. Most of these programs require the X Window System, which we'll show
  you how to install and configure in later chapters.
